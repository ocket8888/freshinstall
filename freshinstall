#!/bin/sh

BASE=true

while getopts ":wpbvlfh" ARG; do
	case $ARG in
		w)
			WEB=true;;
		p)
			PROG=true;;
		v)
			VERBOSE=true;;
		b)
			BASE=false;;
		l)
			LIST=true;;
		h)
			echo "Usage: freshinstall.sh [-wpblvh]\n
\t-w: Also installs components for hosting a webserver\n
\t-p: Also installs extra programming utilities (compilers etc.)\n
\t-b: Does NOT install the base system that is included by default.\n
\t-l: Installs nothing, but instead lists the packages that would be installed\n
\t-f: Forces the install of (only) packages that don't depend on a package manager\n
\t-v: Display verbose output detailing what operations are being done.\n
\t-h: Displays this help text.";
			exit 0;;
		\?)
			echo "Invalid option: -$OPTARG, try '-h' for help" >&2;
			exit 1;;
	esac
done

#.deb install function
deb_install() {
	echo "installin'";
}

#source tarball install function
src_install() {
	wget $URL --outfile=pkgsrc.archive;
	mkdir -p pkgsrc;
	tar xvf pkgsrc -C pkgsrc --strip-components 1;
	pushd pkgsrc ./configure && make && make install;
	popd;
	rm -rf pkgsrc;
}


#list packages and exit
if [ $LIST ]; then
	echo "List of packages goes here";
	exit 0;
fi


#check for root permissions, using sudo/gksudo if available
if [ $(id -u) -ne 0 ]; then
	if [ $DISPLAY ] && [ $(which gksudo) ]; then
		gksudo "$0 $@";
		exit 0;
	fi
	if [ $(which sudo) ]; then
		sudo "$0 $@";
		exit 0;
	fi
	echo "This script requires root permissions."
	exit 2;
fi


#find the package manager and set the update/install commands appropriately
if [ $VERBOSE ]; then
	echo "Searching for package manager...";
fi
if [ $(which apt) ]; then
	PKG="apt";
	INSTALL="apt install -y ";
	UPDATE="apt update";
elif [ $(which apt-get) ]; then
	PKG="apt-get";
	INSTALL="apt-get install -y ";
	UPDATE="apt-get update"
elif [ $(which pacman) ]; then
	PKG="pacman";
	INSTALL="pacman -I ";
	UPDATE="pacman -Syy"
fi
if [ $VERBOSE ] && [ $PKG ]; then
	echo "Package manager found. Using $PKG provided by $(which $PKG).";
fi


if [ $VERBOSE ]; then
	echo "Installing from repositories (using 'packages.pack')";
fi

#reads ppas to be added if on a debian-based system
if [ "$PKG" = "apt" ] || [ "$PKG" = "apt-get" ]; then
	if [ $VERBOSE ]; then
		echo "\tReading ppa's from packages.ppa";
	fi
	PPAS=$(awk -F" " '{print $1}' packages.ppa);
	PKGS=$(awk -F" " '{print $2}' packages.ppa);
	for PPA in $PPAS; do
		add-apt-repository $PPA -y;
	done
	$UPDATE;
fi

if ! [ $PKGS ]; then
	PKGS="";
fi

for line in $(cat packages.pack); do
	PKGS="$PKGS $line";
done

if [ $VERBOSE ]; then
	echo "Installing $PKGS...";
fi

$INSTALL $PKGS;

if [ $VERBOSE ]; then
	echo "Configuring git...";
fi

git config --global user.name ocket8888
git config --global user.email ocket8888@gmail.com
git config --global push.default matching
